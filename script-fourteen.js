'esversion: 6';

// МАССИВЫ - ЭТО ТАКИЕ СТРУКТУРЫ, КОТОРЫЕ СОДЕРЖАТ ЭЛЕМЕНТЫ ПО ПОРЯДКУ

// Редактирование масства с конца

let arr = [1, 2, 3, 4, 5];

arr.pop(); // Команда "pop" - удаляет элементы массива с конца, начиная с последнего. В конце обязательно ставим ";", так как это действие
arr.push('5'); // Команда "push" - добавляет элемент. В данномслучае мы добавили 5 в виде строки

// Редактирование массива сначала

arr.shift(); // Команда "shift" удаляет элемент сначала массива
arr.unshift(1); // Команда "unshift" добавляет элемент сначала массива
arr.unshift(1); // 
console.log(arr);

// КАК ПЕРЕБРАТЬ ЭЛЕМЕНТЫ МАССИВА

let array = ['first', 2, 3, 'four', 5, 6, 7];
// array[99] = 99; // Так записывать НЕЛЬЗЯЯЯ
// console.log(array.length); // В данном случае команда "length" показвает не количество элементов в массиве, а последний индекс + 1
// console.log(array);
// for (let i = 0; i < array.length; i++) { // Переменная i = 0 (так как в JS отсчет начинается с 0). i < array.length (так как переменная i должна быть меньше количества элементов массива, чтобы перебрать каждый из них)
//     console.log(array[i]);  // Выводим массив, в квадратных скобках пытаемся достучаться до каждого элемента нашего массива
// }

// МЕТОД forEach

array.forEach(function (item, i, mass) {
    console.log(i + ': ' + item +  " (массив: "  + mass + ')'); // номер элемента, который перебирается + номер элемента массива
}); // Мы берем callback функцию и применяем к нему (методу) эту функцию. Задаем функцию и в скобках указываем (item - каждый элемент массива; i - (может быть любое название)номер элемента массиа; mass - сам массив)


// ЦИКЛ for of  и  for in

let mass = [1, 3, 4, 6, 7];

for (let key in mass) {  // Данный цикл нам вывел порядковые номера (ключи) элементов
    console.log(key);
}


let mas = [1, 3, 6, 8, 9]; // Данный цикл выводит уже значения элементов, то есть выводит сами элементы

for (let key of mas) {  
    console.log(key);
}

// МЕТОД  split 

let ans = prompt('', ''), // Получаем ответ от пользователя. Когда мы получаем от пользователя строку (например: список товаров через запятую) она помещается в переменную "ans" 
    par = []; // Создаем массив

par = ans.split(','); // Массив = Переменная(которая содержит ответы пользователя).split(',') - указываем знак препинания, которым пользователь разделит элементы
console.log(par);


// МЕТОД join - берет каждый элемент нашего массива и склеивает все в одну строку
let str = ['aaa', 'bbbb', 'zzzz', 'ccc'],
    x = str.join(',');  // В скобках прописываем тот разделитель, через который будут прописаны наши элементы в строке
console.log(str); // Можно указать название массива или переменную (х)


// МЕТОД sort - сортирует массив по каким-либо критериям (например: по алфавиту). Но данный метод сортирует все как строки, поэтому с цифрами будет работать не совсем правильно

let ztr = ['zzz', 'yyyy', 'xxxx', '555'],
    y = ztr.sort();
console.log(ztr);

// Чтобы этот метод работал с цифрами правильно, необходимо передать callback function

let ztl = [1, 15, 17, 19, 4],
    w = ztl.sort(compareNum);  // Передаем callback function методу sort
function compareNum(a, b) { // Callback function
    return a - b;
}
console.log(ztl);


// ПСЕВДОМАССИВЫ - Структура, которая совпадает со структурой массива, по сути - это тоже самое, он также хранит элменты в индексах. Но псевдомассивы НЕ ОБЛАДАЮТ МЕТОДАМИ!!!!